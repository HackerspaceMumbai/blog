---
import { Image } from 'astro:assets';
import { formatDate } from '../utils/formatting';
import placeholderImage from '../assets/images/gallery/pinnedpic-1.jpg';

const { post, featured = false } = Astro.props;

// Robust image resolution function
const getBlogCoverImage = (post) => {
  try {
    // Handle the case where post.data.cover might be ImageMetadata or undefined
    const cover = post?.data?.cover;
    
    if (!cover) {
      return placeholderImage;
    }
    
    // If it's an ImageMetadata object, return it directly
    if (typeof cover === 'object' && cover.src) {
      return cover;
    }
    
    // If it's a string path (legacy), return it
    if (typeof cover === 'string' && cover.length > 0) {
      return cover;
    }
    
    // Fallback to placeholder
    return placeholderImage;
  } catch (error) {
    console.warn('Error resolving blog cover image:', error);
    return placeholderImage;
  }
};

// Generate appropriate alt text based on image type
const getImageAltText = (post, coverImage) => {
  if (coverImage === placeholderImage) {
    return ''; // Empty alt for decorative placeholder
  }
  return `${post.data.title} article thumbnail`;
};

const href = `/blog/${post.slug}/`;
const coverImage = getBlogCoverImage(post);
const imageAltText = getImageAltText(post, coverImage);
const formattedDate = formatDate(post.data.date.toString());
---

<article class="card bg-base-100 border border-base-300 rounded-xl shadow-lg hover:shadow-xl hover:border-primary hover:scale-[1.02] hover:-translate-y-1 group cursor-pointer transition-all duration-300 ease-out overflow-hidden h-full flex flex-col">
  <figure class="relative aspect-[3/2] w-full overflow-hidden">
    <Image
      src={coverImage}
      alt={imageAltText}
      width={800}
      height={450}
      loading="lazy"
      class="object-cover w-full h-full transition-transform duration-300 group-hover:scale-105"
    />
    <div class="absolute inset-0 bg-black/20 pointer-events-none"></div>
    {featured && (
      <div class="absolute top-4 left-4 badge badge-primary badge-lg font-semibold">
        Featured
      </div>
    )}
  </figure>
  
  <div class="card-body flex flex-col flex-1 p-6">
    <h2 class="card-title text-primary text-xl font-bold mb-3 group-hover:text-primary transition-colors line-clamp-2">
      {post.data.title}
    </h2>
    
    <div class="flex items-center gap-2 text-base-content/70 text-sm mb-3">
      <time datetime={post.data.date.toISOString()}>
        {formattedDate}
      </time>
      {post.data.author && (
        <>
          <span>â€¢</span>
          <span>By {post.data.author}</span>
        </>
      )}
    </div>
    
    <p class="mb-4 text-base-content/80 line-clamp-3 text-base leading-relaxed flex-1">
      {post.data.description || 'Click to read more about this blog post...'}
    </p>
    
    {post.data.tags && post.data.tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-4">
        {post.data.tags.slice(0, 3).map((tag) => (
          <span class="badge badge-outline badge-sm">{tag}</span>
        ))}
        {post.data.tags.length > 3 && (
          <span class="badge badge-ghost badge-sm">+{post.data.tags.length - 3} more</span>
        )}
      </div>
    )}
    
    <div class="card-actions mt-auto">
      <a 
        href={href} 
        class="btn btn-primary w-full transition-all duration-200 group-hover:btn-accent"
        aria-label={`Read the full blog post: ${post.data.title}`}
      >
        Read More
      </a>
    </div>
  </div>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>