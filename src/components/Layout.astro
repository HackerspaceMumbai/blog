---
import "../styles/global.css";
import Header from './Header.astro';
import Footer from './Footer.astro';
import socialPreviewImage from '../assets/images/hackerspace_mumbai_social.png';

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  canonical?: string;
  noindex?: boolean;
  type?: 'website' | 'article' | 'profile';
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
  tags?: string[];
}

const { 
  title = "Hackerspace Mumbai", 
  description = "Mumbai's largest open source community",
  image = socialPreviewImage.src,
  canonical,
  noindex = false,
  type = "website",
  publishedTime,
  modifiedTime,
  author,
  tags = []
} = Astro.props;

// Get the current URL for canonical and social sharing
const currentUrl = canonical || Astro.url.href;
const siteUrl    = import.meta.env.SITE || Astro.site || "https://hackmum.in";

// Handle image URL properly - if it's already a full URL or starts with /@fs, use as is
// Otherwise, prepend the site URL
let fullImageUrl;
if (image.startsWith('http') || image.startsWith('/@fs')) {
  fullImageUrl = image;
} else {
  fullImageUrl = image.startsWith('/') ? `${siteUrl}${image}` : `${siteUrl}/${image}`;
}

// Generate structured data for the organization
const organizationSchema = {
  "@context": "https://schema.org",
  "@type": "Organization",
  "name": "Hackerspace Mumbai",
  "alternateName": "HackMum",
  "url": siteUrl,
  "logo": `${siteUrl}/logo.svg`,
  "description": "Mumbai's largest open source community and longest-running tech meetup",
  "foundingDate": "2018",
  "location": {
    "@type": "Place",
    "name": "Mumbai, India",
    "address": {
      "@type": "PostalAddress",
      "addressLocality": "Mumbai",
      "addressCountry": "IN"
    }
  },
  "sameAs": [
    "https://twitter.com/hackmum",
    "https://github.com/HackerspaceMumbai",
    "https://linkedin.com/company/hackerspace-mumbai",
    "https://discord.gg/hackmum",
    "https://t.me/hackmum"
  ]
};

// Generate page-specific structured data
const pageSchema = type === 'article' && publishedTime ? {
  "@context": "https://schema.org",
  "@type": "Article",
  "headline": title,
  "description": description,
  "image": fullImageUrl,
  "url": currentUrl,
  "datePublished": publishedTime,
  "dateModified": modifiedTime || publishedTime,
  "author": {
    "@type": "Person",
    "name": author || "Hackerspace Mumbai"
  },
  "publisher": {
    "@type": "Organization",
    "name": "Hackerspace Mumbai",
    "logo": {
      "@type": "ImageObject",
      "url": `${siteUrl}/logo.png`
    }
  }
} : null;
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
    
    <!-- SEO Meta Tags -->
    <title>{title}</title>
    <meta name="description" content={description} />
    {canonical && <link rel="canonical" href={canonical} />}
    {noindex && <meta name="robots" content="noindex, nofollow" />}
    {!noindex && <meta name="robots" content="index, follow" />}
    <meta name="author" content={author || "Hackerspace Mumbai"} />
    {tags.length > 0 && <meta name="keywords" content={tags.join(', ')} />}
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={currentUrl} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={fullImageUrl} />
    <meta property="og:image:alt" content={`${title} - Social Preview`} />
    <meta property="og:site_name" content="Hackerspace Mumbai" />
    <meta property="og:locale" content="en_US" />
    {publishedTime && <meta property="article:published_time" content={publishedTime} />}
    {modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
    {author && <meta property="article:author" content={author} />}
    {tags.map(tag => <meta property="article:tag" content={tag} />)}

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@hackmum" />
    <meta name="twitter:creator" content="@hackmum" />
    <meta name="twitter:url" content={currentUrl} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={fullImageUrl} />
    <meta name="twitter:image:alt" content={`${title} - Social Preview`} />
    
    <!-- Theme and App Meta Tags -->
    <meta name="theme-color" content="#FFC107" />
    <meta name="application-name" content="Hackerspace Mumbai" />
    
    <!-- Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify(organizationSchema)} />
    {pageSchema && <script type="application/ld+json" set:html={JSON.stringify(pageSchema)} />}
    
    
  </head>
  <body>
    <!-- Skip Links for Accessibility -->
    <a href="#main-content" class="skip-link">Skip to main content</a>
    <a href="#navigation" class="skip-link">Skip to navigation</a>
    
    <div class="min-h-screen flex flex-col bg-base-100 text-base-content">
      <header class="sticky top-0 z-50" role="banner">
        <div id="navigation">
          <Header />
        </div>
      </header>
      
      <main id="main-content" class="flex-1" role="main">
        <slot/>
      </main>
      
      <footer role="contentinfo">
        <Footer />
      </footer>
    </div>
  </body>
</html>