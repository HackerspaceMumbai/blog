---
/* No front-matter needed */
---
<!-- Mode / theme toggle -->
<details id="mode-toggle" class="relative">
  <summary class="list-none">
    <button
      aria-haspopup="menu"
      aria-expanded="false"
      class="relative inline-flex h-9 w-9 items-center justify-center rounded-md border border-border bg-background text-foreground transition-colors hover:bg-muted focus:outline-none focus:ring-2 focus:ring-ring"
      title="Toggle theme"
    >
      <!-- Sun -->
      <svg
        class="h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
          d="M12 3v2m0 14v2m7-9h2M3 12H1m15.364-6.364l1.414 1.414M6.222 17.778l-1.414 1.414m0-13.556l1.414 1.414M17.778 17.778l-1.414 1.414M12 8a4 4 0 100 8 4 4 0 000-8z"/>
      </svg>
      <!-- Moon -->
      <svg
        class="absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
          d="M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z"/>
      </svg>
      <span class="sr-only">Toggle theme</span>
    </button>
  </summary>

  <!-- Dropdown -->
  <ul
    role="menu"
    class="absolute right-0 z-50 mt-2 w-36 rounded-md border border-border bg-popover p-1 text-popover-foreground shadow-lg"
  >
    <li><button class="w-full rounded-sm px-2 py-1.5 text-sm hover:bg-muted" data-theme="theme-light">Light</button></li>
    <li><button class="w-full rounded-sm px-2 py-1.5 text-sm hover:bg-muted" data-theme="dark">Dark</button></li>
    <li><button class="w-full rounded-sm px-2 py-1.5 text-sm hover:bg-muted" data-theme="system">System</button></li>
  </ul>
</details>

<script type="module">
  const root = document.documentElement
  const STORE_KEY = 'theme-preference'

  const systemPref = () =>
    window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'theme-light'

  const applyTheme = (pref) => {
    const mode = pref === 'system' ? systemPref() : pref
    root.classList.toggle('dark', mode === 'dark')
  }

  // initial load
  applyTheme(localStorage.getItem(STORE_KEY) || 'system')

  // option buttons
  document.querySelectorAll('#mode-toggle [data-theme]').forEach(btn => {
    btn.addEventListener('click', (e) => {
      const pref = e.currentTarget.dataset.theme
      localStorage.setItem(STORE_KEY, pref)
      applyTheme(pref)
      // close dropdown
      document.getElementById('mode-toggle').removeAttribute('open')
    })
  })

  // keep in sync when system preference changes
  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
    if ((localStorage.getItem(STORE_KEY) || 'system') === 'system') applyTheme('system')
  })
</script>