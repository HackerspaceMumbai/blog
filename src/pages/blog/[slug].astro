---
import { getEntry, type CollectionEntry } from "astro:content";
import { Image } from 'astro:assets'; 
import Layout from "../../components/Layout.astro";
import Prose from "../../components/Prose.astro";

// Get all possible cover images from the assets directory
const images = import.meta.glob('/src/assets/images/**/*.{jpeg,jpg,png,gif,webp,avif,svg}');

export async function getStaticPaths() {
  const { getCollection } = await import("astro:content");
  const posts = await getCollection("posts");
  return posts.map(post => ({ params: { slug: post.slug } }));
}

const { slug } = Astro.params;

if (typeof slug !== 'string') {
  throw new Error(`Invalid slug: ${slug}`);
}

const post = await getEntry("posts", slug);

if (!post) {
  throw new Error(`Post not found: ${slug}`);
}

// Render the post content
const { Content, headings, remarkPluginFrontmatter } = await post.render();

// Find and load the cover image module based on frontmatter
let coverImageImport = null;
if (post.data.cover) {
  const imagePath = `/src/assets/images/${post.data.cover}`;
  if (images[imagePath]) {
    try {
      // Dynamically import the image module
      coverImageImport = (await images[imagePath]()).default;
    } catch (e) {
       // Handle error silently or log to server logs, not console
    }
  }
}
---

<Layout title={`${post.data.title} | Hackerspace Mumbai Blog`} description={post.data.description}>
  <div class="container mx-auto px-4 py-8">
    <article>
      <header class="mb-8">
        <h1 class="text-4xl font-bold mb-4">{post.data.title}</h1>
        <div class="text-gray-600 mb-6">
          <p>
            By {post.data.author} on {new Date(post.data.date).toLocaleDateString('en-IN', {
              year: 'numeric',
              month: 'long',
              day: 'numeric',
            })}
          </p>
        </div>
        
        {coverImageImport && (
          <Image
            src={coverImageImport}
            alt={`${post.data.title} cover image`}
            class="w-full max-w-4xl mx-auto rounded-lg shadow-lg mb-8"
            loading="eager"
          />
        )}
      </header>
      
      <div class="prose prose-lg max-w-none">
        <Prose>
          <Content />
        </Prose>
      </div>
      
      <footer class="mt-8 pt-6 border-t border-gray-200">
        {post.data.tags && post.data.tags.length > 0 && (
          <div class="mb-4">
            <span class="font-semibold text-gray-700">Tags: </span>
            {post.data.tags.map((tag, index) => (
              <span>
                <a href={`/tags/${tag}`} class="text-primary hover:underline">{tag}</a>
                {index < post.data.tags.length - 1 ? ', ' : ''}
              </span>
            ))}
          </div>
        )}
        
        {post.data.categories && post.data.categories.length > 0 && (
          <div>
            <span class="font-semibold text-gray-700">Categories: </span>
            {post.data.categories.map((category, index) => (
              <span>
                <a href={`/categories/${category}`} class="text-primary hover:underline">{category}</a>
                {index < post.data.categories.length - 1 ? ', ' : ''}
              </span>
            ))}
          </div>
        )}
      </footer>
    </article>
  </div>
</Layout>